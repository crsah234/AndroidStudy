ㅁ navigation(탐색)
 - 사용자가 앱 내의 여러 콘텐츠를 탐색하고, 그곳에 들어갔다 나올 수 있게 하는 상호작용을 의미
 
ㅁ Navigation Component 지원: 앱 안에서 화면간의 이동을 도와주는 구성 요소
 - Navigation Ui 객체 : Navigation Drawers, Bottom Navigation의 연동을 쉽게 구현할수있도록지원
 - ViewModel객체를 이용하여 화면 이동시 UI 관련 Data 공유
 - 백스택 관리 : up과 back 의 동작 처리
 
 
ㅁ Navigation Component
 ㅇ Navigation Graph(탐색 그래프) : 이동할 페이지 목록 및 흐름 표시
                                - 앱에서 갈 수 있는 모든 플로우를 보여주고 앱내의 Fragment를 한눈에 확인 할 수 있습니다.
 ㅇ Navigation Host : Navigation graph에서 대상을 표시하는 빈 컨테이너
 ㅇ Navigation Controller : 페이지 간의 이동을 관리
 ㅇ Navigation Ui 객체 : 상단 앱 바, 탐색 및 하단 탐색으로 '탐색을 관리'
 
  Navigation Graph에서 특정 경로를 따라 이동할지, 특정 대상으로 직접 이동할지 NavController에게 전달하고 
           NavController가 NavHost에 적절한 대상을 표시해주는 방식입니다.
           
ㅁ 대충 navigation graph : 프래그먼트들의 플로우를 시각적으로보여줌
	   navHost : 대상을 표시하는 빈컨테이너, 즉 사진액자?
	   navController : 컨트롤러. 이걸 통해 프래그먼트 이동을 할수 가 있음.
     


ㅁ Navigation 구성요소
  ㅇ Navigation Host(content_main)
     - navigation graph에 정의된 화면들을 보여주는 컨테이너 역할
        속성
        - name : 화면에 출력에사용되는 fragment 클래스 지정
        - defaultNavHost : true면 현재 fragment를 기본 Navhost(액자)로 설정.
        
        
  ㅇ Navigation Controller 
   - Navigation Graph에 정의된 화면들간의 이동을 주관하는 객체
   
   
ㅁ Fragment 간 데이터 전송
 ㅇ Bundle
  - 여러가지 타입의 key, value의 쌍으로 넘김
 ㅇ ViewModel
  - 액티비티- 프레그먼트 / 프레그먼트 간 데이터 전송시 사용
 ㅇ Fragment Result APi
  
  
ㅁ fragment Backstack
	- 첫번째 위에 두번째가 쌓이고 위에 또쌓이는데, popbackstack을 하면 그 백스택이 위에서부터사라지며 밑으로 내려감.
        
        
        
ㅁ View 결합
 - 레이아웃 파일안에서 id속성을 가지는 view객체 직접 참조 가능
 - inflate : binding객체를 생성, 반환
 - getroot() : 제일 부모 뷰인 레이아웃 객체 반환
        
        
        
        
        
        
        
        
        
        
        
        
