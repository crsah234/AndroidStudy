 ㅁ 이벤트 개요

 - 앱과 사용자가 상호작용하기위해 사용자가 하는 행동(터치, 키보드 입력 등등)

 - 앱의 구성요소들 간에 보내느 신호(센서에서 변화 감지시 처리할수 있게끔 이벤트 발생시킴)

 - 터치, 키입력, 화면등등..

 

  ㅇ 이벤트 소스 : 이벤트가 발생한 객체 ex) 버튼 누르면 버튼이 이벤트 소스

 

  ㅇ 이벤트 처리 : 발생한 이벤트에 대해 사용자가 원하느 기능을 수행할수있도록 해주는것

		ex) 터치 이벤트 발생시 화면넘어가는것

 

  ㅇ 안드로이드 이벤트 처리 모델

     1) 델리게이션 모델(delegation model) 위임하는것

	ㅇ 화면을 구성하는 이벤트가 발생한 위젯단위로 이벤트를 처리하는 방식.

	ㅇ 이벤트 소스, 즉 발생한 곳이 이벤트를 이벤트처리기에 넘겨서 처리하는 방식(listener or callback method)

 

     2) 하이어카리 모델(Hierachy)

	ㅇ 뷰의 위계구조를 따라 이벤트가 전달

	ㅇ 액티비티 차원에서이벤트를 처리하는 방식

	ㅇ 터치이벤트, 키 인풋 이벤트 

 

  ㅇ 이벤트 콜백 메소드

     1) 특정 이벤트 발생시 이벤트 처리르 위해 시스템에 의해 자동으로 호출되는 메소드

     2) 이 메소드를 오버라이딩 하여 이벤트 처리 동작을 정의하는 코드를 작성

     3) View 클래스의 이벤트 콜백 메소드

	ㅇ boolean onTouchEvent(MotionEvent event) : 화면 터치

	ㅇ booelan onKeyDown(int keyCode, keyEvent event) : 키 누름

	ㅇ booelan onKeyUP(int keyCode, keyEvent event) : 키에서 손을 뗄 경우

	ㅇ void onBackPressed() : 하단 back button을 클릭한 경우

 

 ㅁ 이벤트 처리 구조

     1) 버튼 클릭

     2) 안드로이드가 포착, 액션 취함

     3) 안드로이드가 이벤트 생성, onCLick 함수 실행

     4) 이벤트 처리기로 넘김 Listener.onClick

     5) UI이벤트든 시스템 이벤트든 순서대로, event Queue, 처리함

 

ㅁ 