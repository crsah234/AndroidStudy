ㅁ actvity
 - 매니페스트 파일에서 activity를 정의하고 사용.
  - intent-filer에서 액티비티 구동방법을 정의하고 사용함
  
ㅁ 레이아웃 인플레이션 : 화면구성요소들을 생성하여 화면을 구성하는 것.
  - 그로 인해 findViewByID(R.id.~~) 화면구성요소 사용 가능함!
  
ㅁ Intent : 화면전환에 대한 정보를 가지고 있는 객체
 - 인텐트가 가지고 있는 정보들
   ㅇ 구성요소 이름(component) : 전환대상,목적지
   ㅇ 작업(action) : 이동한 목적지에서 수행할 작업
   ㅇ 카테고리(category) : 목적지를 결정하는데 필요한 추가정보
   ㅇ 데이터(data) : 이동시 작업에 필요한 데이터, 데이터 구조
   ㅇ 엑스트라(extra) : 추가데이터
   ㅇ 플래그(flag) : 인텐트 생성 방법 및 처리에 관한 정보 명시
   

ㅁ Intent 유형 - 암시적인텐트, 명시적 인텐트
 ㅇ 암시적 intent : 목적지 activity가 명확치않으나, 어떤 기능을 해야할지는 안다.
 ㅇ 명시적 intent : 목적지 activity가 명확함.
 

ㅁ 암시적 intent
  - action, data를 암시적으로 넣는다.

  Intent intent = new Intent(ACTION_DIAL,"tel:01067114740") -> 전화걸기 앱 실행
  Intent intent = new Intent(ACTION_VIEW,"geo:~~~~~") -> 지도 앱 실행
 
ㅁ 명시적 intent
 - Intent 안에 this와 목적지.class 가 들어가야함 *******
  Intent intent = new Intent(this, SecondActivity.class)
  
  
  
ㅁ Intent 할때 메소드
 - void startActivity(Intent intent) : 다른 Activity tlwkr
 - Intent getIntent() : A->B 로 StartActivity로 인텐트 넘겼을때 B에서 인텐트를 받을 때 사용
 - void finish() : 현 액티비티 종료
 
ㅁ 인텐트 할때
  ㅇ 값 보낼때 
    putExtra("key",value)
       - value는 string, int, float 등등 다양함
       
  ㅇ 값 받을때
    getXXXExtra("key")
       - xxx는 받을 데이터의 '타입'
       
       ex ) putExtra('a','a') -> getStringExtra('a')
       ex ) putExtra('b',1) -> getIntExtra('b')
       
       
 실제로 사용시
  A activity
    Intent intent = new Intent(this, BActivity.class)
    intent.putEtra('a','b')
    startActivity(intent);
    
    
  B activity
   Intent it = getIntent();
   String a = it.getStringExtra('a');
  
     
 만약 어떤 버튼을 눌러 B->A 로 다시 돌아가고싶다
  onClick에 finish() 구현하기.
  
  
 
 
