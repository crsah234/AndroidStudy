ActivityResult API


ActivityresultContract : 액티비티 이동시 인풋값, 아웃풋값의 형태를 정해주는 객체
ActivityresultCallback : 결과를 받기위한 메소드
ActivityResultLauncher : 응답을 받기 위한 액티비티 이동을 주관하는 객체


ActivityResultContracts : 미리 여러개의 inner 클래스로 이동 및응답유형 정의하여 제공함
  1. startActivityForResult : Input을 Intent, Output 을 ActivityResult로 받음.
  2. getContent :  input - String , output - Uri객체
    - 연락처, 갤러리 이미지 등 가져올때 사용.


구현과정

1. ActivityResultcontract<I,O> 객체 생성 
  - intent보내고 activityresult 가져오니 contracts의 startActivityForResult() 클래스 사용
  
ActivityResultContract<Intent, ActivityResult> contract = new ActivityResultContract.startActivityForResult();

2. ActivityResultCallback<O> 객체 생성 - 나중에 받은 결과를 onActivityResult함수에서 작성한다.

ActivityResultCallback<ActivityResult> callback = new ActivityResultCallback<ActivityResult>(){

@Override
        public void onActivityResult(ActivityResult result) {

        }

}

3. AcitivityResultLauncher<I> 객체 생성 - registerForAcitivityResult(contract, callback) 메소드 사용

ActivityResultLaucher<Intent> resultLauncher = registerForActivityResult(contract, callback)


4. 액티비티 이동 - launch메소드 이용 - ResultLauch.lauch(Intent)


ㅁ Activity 이동시 사용되는 메소드

 - ActivityResultLauncher<I> registerForActivityResult<contract, callback> 넘기는 a에서.
 
 - setResult(int resultCode, Intent intent) : 넘겨진 b에서 다시 a로 넘길때. 
    - resultCode : RESULT_OK, CANCELED, FIRST_USER. 응답코드
    - intent : 전송할 데이터를 가지고 있는 객체.
    
    b->a로 다시갈때.
 Intent intent = new Intent();
   intent.putExtra("a","a");
   setResult(RESULT_OK,intent);
   finish(); 
   
ㅁ ActivityResultLauncher 클래스
  - void launch(Input input)
   - ActivityResultContracts 타입이 startActivityForResult면 I : intent, output : ActivityResult
   - 이것을 통해 액티비티 이동을 실행  a->b
      - ActivityResultLauncher<Intent> resultLauncher= registerForActivityResult<contract, callback>
      resultLancher.launch(Intent);
      
      


실행 흐름

 Aactivity
 
  ActivityResultContract<Intent, ActivityResult> contract = new ActivityResultcontracts.startActivityForResult();
      ActivityResultCallback<ActivityResult> callback = new ActivityResultCallback<ActivityResult>{
  
          public void onActivityResult(AcitivtyResult result){
  
          }
  
  }
  
  ActivityResultLauncher resultLauncher = registerForActivityResult(contract, callback);
  Intent it = new Intent(getApplicationContext(), B.class);
  It.putExtra("a","a");
  resultLauncher.launch(it);
  
  
  Bactivity
  
  Intent it = getIntent();로 값 받음
  
  - 다시 Aactivity로 넘어가는거할때
   Intent intent = new Intent();
   intent.putExtra("a","a");
   setResult(RESULT_OK,intent);
   finish(); 
   
   
   
 다시 Aactivity -> ActivityResultCallback의 메소드 onActivityResult.
 public void onActivityResult(AcitivtyResult result){ // 응답 받음
  
  int resultCode = result.getResultCode(); // RESULT_OK값 확인
  Intent intent = result.getData(); // 양방향으로 넘어온 결과값을 받을때는 getIntent가 아닌 getData();
  String a = intent.getStringExtra("a");
  
  }
 
 





